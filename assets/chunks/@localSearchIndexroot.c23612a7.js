const t='{"documentCount":4,"nextId":4,"documentIds":{"0":"/testing/guide/#前端测试基础概念","1":"/testing/guide/#概述","2":"/testing/guide/#手动测试","3":"/testing/guide/#自动化测试"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[1,1,1],"1":[1,1,31],"2":[1,1,21],"3":[1,1,48]},"averageFieldLength":[1,1,25.25],"storedFields":{"0":{"title":"前端测试基础概念","titles":[]},"1":{"title":"概述","titles":["前端测试基础概念"]},"2":{"title":"手动测试","titles":["前端测试基础概念"]},"3":{"title":"自动化测试","titles":["前端测试基础概念"]}},"dirtCount":0,"index":[["编制一个高效的测试套件",{"2":{"3":1}}],["编写自动化测试代码通常是开发人员不太喜欢的一个环节",{"2":{"3":1}}],["编写应用程序来替代人工检验",{"2":{"1":1}}],["我们如何从一开始就整合不同的测试技巧",{"2":{"3":1}}],["一些特殊场景下的测试问题该怎么解决",{"2":{"3":1}}],["一个是业务繁忙",{"2":{"3":1}}],["一个简单的定义是",{"2":{"1":1}}],["应用程序中哪些部分应该被优先测试",{"2":{"3":1}}],["应用程序测试是指检查程序运行过程是否正确",{"2":{"1":1}}],["所以",{"2":{"3":1}}],["另一个是不知道如何编写测试",{"2":{"3":1}}],["没有时间进行测试的编写",{"2":{"3":1}}],["造成这个情况的原因主要有两个",{"2":{"3":1}}],["之后就很少对该块代码进行管理",{"2":{"3":1}}],["查看效果是否正确",{"2":{"3":1}}],["只是打开浏览器手动点击",{"2":{"3":1}}],["前端开发人员在开发完一项功能后",{"2":{"3":1}}],["前端测试基础概念",{"0":{"0":1},"1":{"1":1,"2":1,"3":1}}],["大多数情况下",{"2":{"3":1}}],["大部分时间都在做回归测试",{"2":{"2":1}}],["而且一旦掌握了前端自动化测试方案无论是对应对大型项目的开发还是升职加薪都是有益的",{"2":{"3":1}}],["而且事实上",{"2":{"3":1}}],["而且没有创造性的输入",{"2":{"2":1}}],["促进重构",{"2":{"3":1}}],["减少调试时间",{"2":{"3":1}}],["快速反馈",{"2":{"3":1}}],["改进设计",{"2":{"3":1}}],["稳定性的信心",{"2":{"3":1}}],["增强程序员对程序健壮性",{"2":{"3":1}}],["今早的发现程序的bug和不足",{"2":{"3":1}}],["比如",{"2":{"3":1}}],["相比手动测试而言节省了大量时间以及提高了程序的稳定性",{"2":{"3":1}}],["虽然每一种方法的优势各不相同",{"2":{"3":1}}],["虽然有一部分手动测试时间是花在测试新特性上",{"2":{"2":1}}],["也可以直接对比程序渲染之后的截图",{"2":{"3":1}}],["可以直接调用源代码里的函数",{"2":{"3":1}}],["可以编写浏览器自动执行的程序",{"2":{"3":1}}],["可使用许多种不同的方法来编写自动化测试脚本",{"2":{"3":1}}],["就可以不费吹灰之力的进行无数次重复测试",{"2":{"3":1}}],["就是用其他额外的代码检查被测软件的代码",{"2":{"3":1}}],["换句话说",{"2":{"3":1}}],["是利用计算机程序检查软件是否运行正常的测试方法",{"2":{"3":1}}],["testing",{"2":{"3":1}}],["automated",{"2":{"3":1}}],["计算机特别擅长此类工作",{"2":{"2":1}}],["幸运的是",{"2":{"2":1}}],["总之",{"2":{"2":1}}],["要求投入更多注意力",{"2":{"2":1}}],["它们是重复性的",{"2":{"2":1}}],["回归测试对人类来说是非常困难的任务",{"2":{"2":1}}],["这些部分应该使用什么方法进行测试",{"2":{"3":1}}],["这也是自动化测试可以大展身手的地方",{"2":{"2":1}}],["这种测试太枯燥了",{"2":{"2":1}}],["这种测试被称为回归测试",{"2":{"2":1}}],["这个fix会不会引入其他",{"2":{"1":1}}],["这个feature会不会带来其他bug",{"2":{"1":1}}],["这个过程非常枯燥而痛苦",{"2":{"1":1}}],["忘记测试某项功能",{"2":{"2":1}}],["手动不适合大型项目",{"2":{"2":1}}],["手动测试的优势在于足够简单灵活",{"2":{"2":1}}],["手动测试",{"0":{"2":1},"2":{"1":1}}],["但这些问题不应该作为我们掌握前端自动化测试的绊脚石",{"2":{"3":1}}],["但它们有一大共同点",{"2":{"3":1}}],["但是大部分时间还是用来检查之前的特性是否仍正常工作",{"2":{"2":1}}],["但是缺点也很明显",{"2":{"2":1}}],["但你心里还是会犯嘀咕",{"2":{"1":1}}],["下一步理所当然就是去手动测试它",{"2":{"2":1}}],["每一个称职的开发人员都懂得手动测试代码",{"2":{"2":1}}],["每次在版本发布上线之前",{"2":{"1":1}}],["自动化测试还有很多优点",{"2":{"3":1}}],["自动化测试",{"0":{"3":1},"2":{"1":1,"3":1}}],["通过测试人员与应用程序的交互来检查是否正常工作",{"2":{"1":1}}],["如何进行前端应用测试",{"2":{"3":1}}],["如何进行应用程序测试",{"2":{"1":1}}],["如果没有测试",{"2":{"1":1}}],["不能保证代码能够正常运行",{"2":{"1":1}}],["代码的完工其实并不等于开发的完工",{"2":{"1":1}}],["在实际开发过程中",{"2":{"3":1}}],["在编写完源代码之后",{"2":{"2":1}}],["在日常的开发中",{"2":{"1":1}}],["在电脑前蹲上好几个小时甚至是更长时间对你的应用进行测试",{"2":{"1":1}}],["什么是应用程序测试",{"2":{"1":1}}],["解决它的根本原因就在于引入自动化测试方案",{"2":{"1":1}}],["以上这些问题都是由于大多数开发者所使用最基本的手动测试的方式所带来的问题",{"2":{"1":1}}],["你会花费大量的时间进行回归测试",{"2":{"1":1}}],["你应该会逐渐察觉到你在开发新功能或修复bug的时候",{"2":{"1":1}}],["feature",{"2":{"1":1}}],["quot",{"2":{"1":2}}],["即使代码看起来没什么问题",{"2":{"1":1}}],["会变得越发小心翼翼",{"2":{"1":1}}],["当然了自动化测试不可能保证一个程序是完全正确的",{"2":{"3":1}}],["当然不仅如此",{"2":{"3":1}}],["当测试代码编写完之后",{"2":{"3":1}}],["当你想要对项目中的代码进行重构的时候",{"2":{"1":1}}],["当维护者的数量不止你一个",{"2":{"1":1}}],["当代码的复杂度达到了一定的级别",{"2":{"1":1}}],["对于稍微有一些开发经验的同学在开发过程中总会经历下面类似的问题",{"2":{"1":1}}],["概述",{"0":{"1":1}}]],"serializationVersion":2}';export{t as default};
